###
# Exports
###
export EDITOR=vim
export PATH=/opt/local/bin:/opt/local/sbin:$PATH

###
# Aliases
###
alias ls="ls -G"
alias ll="ls -G -l"
alias la="ls -G -la"
alias env="env | sort -n"
alias x="exit"
alias gping="ping www.google.com"
alias u="ultralist"

alias PythonHTTP="python3 -m http.server"
alias PythonJSON="python -m json.tool"

###
# Functions
###
superGrep() {
    if [ -z "$1" ]; then
        echo "Usage: superGrep (pattern) [file pattern]"
        echo "   pattern: A grep pattern"
        echo "   file pattern (optional): only grep files with this pattern"
        return
    fi
    if [ -z "$2" ]; then
        FILE_PATTERN=""
    else
        FILE_PATTERN="-name $2"
    fi
    find . ${FILE_PATTERN} -type f -exec grep "$1" "{}" /dev/null \; | grep -v "^Binary file"
}

tcpDump() {
    if [ -z "$1" ]; then
        echo "Usage: tcpDump (dump file) [BSDName]"
        echo "   dump file: path to file for storing dump"
        echo "   BSDName (optional): device name according to ifconfig/System Information. Default 'en0'"
        echo ""
        echo "You can view contents of the file with:"
        echo "   tcpdump -s 0 -n -e -x -vvv -r (dump file)"
        echo ""
        return
    fi
    file=$1
    if [ -z "$2" ]; then
        device="en0"
    else
        device=$2
    fi
    echo -e "About to run: \033[01;32msudo\033[0m" tcpdump -i "$device" -s 0 -B 524288 -w "$file"
    echo ""
    echo "Once tcpdump listening begins, execute network function you want to monitor"
    echo -e "To view dump, use: \033[01;32mtcpdump -s 0 -n -e -x -vvv -r $file\033[0m"
    echo ""
    echo "Remember to Ctrl-c, to stop listening"
    echo ""
    sudo tcpdump -i "$device" -s 0 -B 524288 -w "$file"
}

BashLogHistory() {
    if [ -z "$1" ]; then
        HISTORY_FILE="$HOME/history.txt"
    else
        HISTORY_FILE="$1"
    fi
    echo "Recording shell history to $HISTORY_FILE"
    HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S \$\$\$ "
    PROMPT_COMMAND="history 1 >> $HISTORY_FILE"
}


EstablishedTCP_Ports() {
    netstat -a -p tcp | grep -e ESTABLISHED -e LISTEN | sed 's/ [ ]*/ /g' | cut -f 4 -d ' ' | rev | cut -f 1 -d . | rev | sort -n | uniq
}
EstablishedTCP_ProcessesByPort() {
    ports=$(EstablishedTCP_Ports)
    for x in $ports; do
        echo "Port $x"
        pid=$(lsof -t -i ":$x")
        for y in $pid; do
            ps -e -o pid= -o user= -o command= "$y"
        done
    done
}
EstablishedTCP_UniqProcesses() {
    ports=$(EstablishedTCP_Ports)
    pid=$(for x in $ports; do lsof -t -i ":$x"; done | sort -n | uniq)
    for x in $pid; do ps -e -o pid= -o user= -o command= "$x"; done
}


# Source local variables for env, PATH...etc
if [ -f "$HOME/.bash_local" ]; then
    #shellcheck source=/dev/null
    source "$HOME/.bash_local"
fi

# Select a random terminal theme. chcolor.sh needs to be in PATH set by .bash_local
if command -v chcolor.sh > /dev/null 2>&1; then
    chcolor.sh
fi

